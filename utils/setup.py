# utils/setup.py
"""
–ú–∞—Å—Ç–µ—Ä –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OnboardingBuddy
"""
import os
import sys
from pathlib import Path


def setup_wizard():
    """–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ OnboardingBuddy!")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    env_file = Path('.env')

    if env_file.exists():
        response = input("üìÅ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/N): ")
        if response.lower() != 'y':
            print("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            return

    print("\nüìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:")
    print("-" * 40)

    # –°–æ–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    config = {}

    # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
    print("\nü§ñ 1. –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞")
    print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
    config['BOT_TOKEN'] = input("   –í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: ").strip()

    if not config['BOT_TOKEN']:
        print("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
        return

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
    print("\nüë• 2. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞")
    print("   –ü–æ–ª—É—á–∏—Ç–µ –≤–∞—à ID, –Ω–∞–ø–∏—Å–∞–≤ /start –±–æ—Ç—É @userinfobot")
    admin_ids = input("   –í–≤–µ–¥–∏—Ç–µ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é: ").strip()
    config['ADMIN_IDS'] = admin_ids if admin_ids else "123456789"

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏
    print("\nüè¢ 3. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏")
    config['COMPANY_NAME'] = input("   –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: ").strip() or '–ê–û "–ë–∏–≥–¢–∞–π–º –ê–π–¢–∏"'

    # HR –∫–æ–Ω—Ç–∞–∫—Ç—ã
    print("\nüìß 4. –ö–æ–Ω—Ç–∞–∫—Ç—ã HR-–æ—Ç–¥–µ–ª–∞")
    config['HR_EMAIL'] = input("   Email HR-–æ—Ç–¥–µ–ª–∞: ").strip() or "hr@company.ru"
    config['HR_TELEGRAM'] = input("   Telegram HR (@username): ").strip() or "@hr_manager"
    config['HR_PHONE'] = input("   –¢–µ–ª–µ—Ñ–æ–Ω HR: ").strip() or "+7 (xxx) xxx-xx-xx"

    # –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞
    print("\nüîß 5. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞")
    config['SUPPORT_EMAIL'] = input("   Email —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: ").strip() or "support@company.ru"
    config['SUPPORT_TELEGRAM'] = input("   Telegram —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: ").strip() or "@tech_support"
    config['SUPPORT_PHONE'] = input("   –¢–µ–ª–µ—Ñ–æ–Ω —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏: ").strip() or "+7 (xxx) xxx-xx-xx"

    # –†–µ—Å—É—Ä—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏
    print("\nüåê 6. –†–µ—Å—É—Ä—Å—ã –∫–æ–º–ø–∞–Ω–∏–∏")
    config['COMPANY_SITE'] = input("   –°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏: ").strip() or "https://company-site.ru"
    config['TEAM_PAGE'] = input("   –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–∞–Ω–¥—ã: ").strip() or f"{config['COMPANY_SITE']}/team"
    config['HANDBOOK_URL'] = input("   –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ").strip() or f"{config['COMPANY_SITE']}/handbook"

    # –í—Å—Ç—Ä–µ—á–∏
    print("\nüìÖ 7. –°—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏")
    default_meeting = "https://meet.company.ru"
    config['MEETING_GENERAL'] = input(
        f"   –û–±—â–∞—è –ø–ª–∞–Ω–µ—Ä–∫–∞ [{default_meeting}/general]: ").strip() or f"{default_meeting}/general"
    config['MEETING_IT'] = input(f"   IT –ø–ª–∞–Ω–µ—Ä–∫–∞ [{default_meeting}/it]: ").strip() or f"{default_meeting}/it"
    config['MEETING_MARKETING'] = input(
        f"   –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –ø–ª–∞–Ω–µ—Ä–∫–∞ [{default_meeting}/marketing]: ").strip() or f"{default_meeting}/marketing"

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\n‚öôÔ∏è 8. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")

    debug_mode = input("   –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ (y/N): ").strip().lower()
    config['DEBUG_MODE'] = 'True' if debug_mode == 'y' else 'False'

    notifications = input("   –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (Y/n): ").strip().lower()
    config['NOTIFICATION_ENABLED'] = 'False' if notifications == 'n' else 'True'

    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    print("\nüíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")

    env_content = f"""# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è OnboardingBuddy Bot
# –°–æ–∑–¥–∞–Ω–æ –º–∞—Å—Ç–µ—Ä–æ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

# ========================================
# –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò –ë–û–¢–ê
# ========================================

BOT_TOKEN={config['BOT_TOKEN']}
ADMIN_IDS={config['ADMIN_IDS']}
DEBUG_MODE={config['DEBUG_MODE']}

# ========================================
# –ë–ê–ó–ê –î–ê–ù–ù–´–• –ò –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
# ========================================

DATABASE_PATH=data/onboarding.db
LOG_LEVEL=INFO
LOG_FILE=data/logs/bot.log

# ========================================
# –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ö–û–ú–ü–ê–ù–ò–ò
# ========================================

COMPANY_NAME={config['COMPANY_NAME']}

# HR –æ—Ç–¥–µ–ª
HR_EMAIL={config['HR_EMAIL']}
HR_TELEGRAM={config['HR_TELEGRAM']}
HR_PHONE={config['HR_PHONE']}

# –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
SUPPORT_EMAIL={config['SUPPORT_EMAIL']}
SUPPORT_TELEGRAM={config['SUPPORT_TELEGRAM']}
SUPPORT_PHONE={config['SUPPORT_PHONE']}

# ========================================
# –†–ï–°–£–†–°–´ –ò –°–°–´–õ–ö–ò –ö–û–ú–ü–ê–ù–ò–ò
# ========================================

COMPANY_SITE={config['COMPANY_SITE']}
TEAM_PAGE={config['TEAM_PAGE']}
HANDBOOK_URL={config['HANDBOOK_URL']}
CALENDAR_URL=https://calendar.company.ru
PORTAL_URL=https://portal.company.ru

# ========================================
# –°–°–´–õ–ö–ò –ù–ê –í–°–¢–†–ï–ß–ò –ò –ü–õ–ê–ù–ï–†–ö–ò
# ========================================

MEETING_GENERAL={config['MEETING_GENERAL']}
MEETING_IT={config['MEETING_IT']}
MEETING_MARKETING={config['MEETING_MARKETING']}
MEETING_HR=https://meet.company.ru/hr

# ========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô
# ========================================

NOTIFICATION_ENABLED={config['NOTIFICATION_ENABLED']}
FEEDBACK_NOTIFICATION=True

# ========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –†–ê–°–°–´–õ–ö–ò
# ========================================

BROADCAST_DELAY=0.1
MAX_MESSAGE_LENGTH=4000

# ========================================
# –ù–ê–°–¢–†–û–ô–ö–ò –û–ù–ë–û–†–î–ò–ù–ì–ê
# ========================================

MAX_ONBOARDING_STAGES=10
AUTO_REMINDERS=False
REMINDER_INTERVAL_DAYS=3
"""

    try:
        with open('.env', 'w', encoding='utf-8') as f:
            f.write(env_content)

        print("‚úÖ –§–∞–π–ª .env —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")

        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
        print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
        create_directory_structure()

        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ —Ñ–∞–π–ª–µ .env")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py")
        print("\nüìû –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ .env: {e}")


def create_directory_structure():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π"""
    directories = [
        'data',
        'data/logs',
        'data/exports',
        'data/backups',
        'data/temp',
        'config',
        'bot',
        'handlers',
        'database',
        'utils',
        'services'
    ]

    for directory in directories:
        os.makedirs(directory, exist_ok=True)

        # –°–æ–∑–¥–∞–µ–º __init__.py —Ñ–∞–π–ª—ã –¥–ª—è Python –ø–∞–∫–µ—Ç–æ–≤
        if directory in ['config', 'bot', 'handlers', 'database', 'utils', 'services']:
            init_file = os.path.join(directory, '__init__.py')
            if not os.path.exists(init_file):
                with open(init_file, 'w') as f:
                    f.write(f'"""\n{directory.title()} –º–æ–¥—É–ª—å OnboardingBuddy\n"""\n')

    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞!")


def validate_setup():
    """–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    issues = []

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists('.env'):
        issues.append("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    required_dirs = ['data', 'data/logs']
    for directory in required_dirs:
        if not os.path.exists(directory):
            issues.append(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {directory} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º requirements.txt
    if not os.path.exists('requirements.txt'):
        issues.append("‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")

    if issues:
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        for issue in issues:
            print(f"  {issue}")
        return False
    else:
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        return True


def create_systemd_service():
    """–°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ –¥–ª—è Linux"""
    if os.name != 'posix':
        print("‚ùå Systemd –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –≤ Linux")
        return

    current_dir = os.path.abspath('.')
    user = os.getenv('USER', 'ubuntu')

    service_content = f"""[Unit]
Description=OnboardingBuddy Telegram Bot
After=network.target

[Service]
Type=simple
User={user}
WorkingDirectory={current_dir}
ExecStart=/usr/bin/python3 {current_dir}/main.py
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
"""

    service_file = 'onboarding-buddy.service'

    try:
        with open(service_file, 'w') as f:
            f.write(service_content)

        print(f"‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω: {service_file}")
        print("\n–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print(f"sudo cp {service_file} /etc/systemd/system/")
        print("sudo systemctl daemon-reload")
        print("sudo systemctl enable onboarding-buddy")
        print("sudo systemctl start onboarding-buddy")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è systemd —Å–µ—Ä–≤–∏—Å–∞: {e}")


if __name__ == '__main__':
    from datetime import datetime

    if len(sys.argv) > 1:
        command = sys.argv[1]

        if command == 'wizard':
            setup_wizard()
        elif command == 'validate':
            validate_setup()
        elif command == 'systemd':
            create_systemd_service()
        elif command == 'dirs':
            create_directory_structure()
        else:
            print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: wizard, validate, systemd, dirs")
    else:
        setup_wizard()