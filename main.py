#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
OnboardingBuddy - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

–ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
"""

import logging
import sys
import os
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackQueryHandler
from telegram import Update

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.settings import settings
from database.manager import db_manager
from utils.helpers import setup_logging

# –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
from handlers.start import (
    start_command, help_command, status_command,
    contacts_command, handle_main_menu
)
from handlers.preboarding import handle_preboarding_callback
from handlers.admin import (
    admin_command, admin_callback_handler, broadcast_command
)
from handlers.callbacks import handle_all_callbacks
from handlers.info import handle_info_menu
from handlers.faq import handle_faq_menu
from handlers.feedback import handle_feedback_message

logger = logging.getLogger(__name__)


async def error_handler(update: object, context):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Exception while handling an update: {context.error}")

    # –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ
    if isinstance(update, Update) and update.effective_message:
        try:
            await update.effective_message.reply_text(
                "üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.\n\n"
                f"–ü–æ–¥–¥–µ—Ä–∂–∫–∞: {settings.SUPPORT_TELEGRAM}"
            )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")


def setup_handlers(application: Application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–æ—Ç–∞"""

    # –ö–æ–º–∞–Ω–¥—ã
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("status", status_command))
    application.add_handler(CommandHandler("contacts", contacts_command))
    application.add_handler(CommandHandler("admin", admin_command))
    application.add_handler(CommandHandler("broadcast", broadcast_command))

    # Callback query –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CallbackQueryHandler(admin_callback_handler, pattern="^admin_.*"))
    application.add_handler(
        CallbackQueryHandler(handle_preboarding_callback, pattern="^(start_preboarding|docs_.*|all_docs_sent)$"))
    application.add_handler(CallbackQueryHandler(handle_all_callbacks))

    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.Regex("^(üöÄ|üìã|üìö|‚ùì|üë•|üìû|üí¨|üìä|üè†).*"),
        handle_main_menu
    ))

    # –ü–æ–¥–º–µ–Ω—é
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.Regex("^(üè¢|üìú|üîß|üìÖ).*"),
        handle_info_menu
    ))

    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.Regex("^(üí∞|üïê|üèñÔ∏è|üéì).*"),
        handle_faq_menu
    ))

    # –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ä–µ–¥–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö)
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND,
        handle_feedback_message
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)

    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")


def validate_configuration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º"""
    issues = settings.validate()

    if issues:
        logger.warning("–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for issue in issues:
            logger.warning(f"  {issue}")

        if settings.BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
            logger.error("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
            logger.error("–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –∏ —É–∫–∞–∂–∏—Ç–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOT_TOKEN")
            return False

    logger.info("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
    return True


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    setup_logging()

    logger.info("üöÄ –ó–∞–ø—É—Å–∫ OnboardingBuddy...")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if not validate_configuration():
        sys.exit(1)

    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    logger.info(settings.get_config_summary())

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    try:
        db_manager.init_database()
        logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        sys.exit(1)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(settings.BOT_TOKEN).build()

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    setup_handlers(application)

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    stats = db_manager.get_user_statistics()
    logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats['total_users']} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, "
                f"{stats['active_week']} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é")

    logger.info("ü§ñ OnboardingBuddy –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    logger.info(f"üë• –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã: {settings.ADMIN_IDS}")

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    try:
        application.run_polling(
            allowed_updates=Update.ALL_TYPES,
            drop_pending_updates=True,
            poll_interval=2.0,
            timeout=20
        )
    except KeyboardInterrupt:
        logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)
    finally:
        logger.info("üëã OnboardingBuddy –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")


if __name__ == '__main__':
    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if len(sys.argv) > 1:
        command = sys.argv[1]

        if command == 'setup':
            from utils.setup import setup_wizard

            setup_wizard()
        elif command == 'validate':
            validate_configuration()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        elif command == 'stats':
            stats = db_manager.get_user_statistics()
            print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:")
            print(f"  –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
            print(f"  –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: {stats['active_week']}")
            print(f"  –ó–∞–≤–µ—Ä—à–∏–ª–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥: {stats['completion_rate']}%")
        elif command == 'export':
            from utils.export import export_data

            export_data()
        elif command == 'cleanup':
            days = int(sys.argv[2]) if len(sys.argv) > 2 else 90
            deleted = db_manager.cleanup_old_data(days)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {deleted} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        elif command == 'validate':
            from utils.validators import get_validation_summary

            summary = get_validation_summary()
            print("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏:")
            if summary['overall_status'] == 'good':
                print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã")
            else:
                print(f"‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: {summary['overall_status']}")
                for issue in summary['config_issues'][:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                    print(f"  {issue}")
            days = int(sys.argv[2]) if len(sys.argv) > 2 else 90
            deleted = db_manager.cleanup_old_data(days)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {deleted} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π")
        else:
            print("‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: setup, validate, stats, export, analytics, cleanup")
    else:
        main()