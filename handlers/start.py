# handlers/start.py
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —Å—Ç–∞—Ä—Ç–∞ –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
"""
import logging
from telegram import Update
from telegram.ext import ContextTypes

from config.settings import settings
from database.manager import db_manager
from database.models import User, UserStatus
from bot.keyboards import Keyboards

logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user

    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db_user = db_manager.get_user(user.id)

    if not db_user:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        db_user = db_manager.create_user(
            user_id=user.id,
            username=user.username,
            full_name=user.full_name
        )
        db_manager.log_user_action(user.id, "start", "–ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞")

        welcome_text = f"""
üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ OnboardingBuddy, {user.first_name}!

–Ø –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ {settings.COMPANY_NAME}. 
–ü–æ–º–æ–≥—É –≤–∞–º —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π –∏ –æ—Ç–≤–µ—á—É –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã.

üöÄ –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ.
"""
    else:
        db_manager.log_user_action(user.id, "start", "–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

        # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        status_messages = {
            UserStatus.NEW: "–ù–∞—á–Ω–∏—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–∞ '–ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥' –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.",
            UserStatus.PREBOARDING: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–±–æ—Ä–¥–∏–Ω–≥–∞.",
            UserStatus.PREBOARDED: "–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª—É '–û–Ω–±–æ—Ä–¥–∏–Ω–≥'.",
            UserStatus.ONBOARDING: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ '–û–Ω–±–æ—Ä–¥–∏–Ω–≥'.",
            UserStatus.COMPLETED: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—Å–µ —ç—Ç–∞–ø—ã –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø—Ä–æ–π–¥–µ–Ω—ã."
        }

        status_hint = status_messages.get(db_user.status, "")

        welcome_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {user.first_name}!

{db_user.status_emoji} –í–∞—à —Å—Ç–∞—Ç—É—Å: {db_user.status_name}
üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: {db_user.stage}/10 —ç—Ç–∞–ø–æ–≤

{status_hint}

–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:
"""

    await update.message.reply_text(
        welcome_text,
        reply_markup=Keyboards.get_main_menu()
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏"""
    user_id = update.effective_user.id
    db_manager.log_user_action(user_id, "help", "–ó–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É")

    help_text = f"""
ü§ñ OnboardingBuddy - –°–ø—Ä–∞–≤–∫–∞

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –±–æ—Ç–∞ {settings.COMPANY_NAME}!

üìã –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:
üöÄ **–ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥** - –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –Ω–∞ —Ä–∞–±–æ—Ç—É
üìã **–û–Ω–±–æ—Ä–¥–∏–Ω–≥** - –ü–æ—à–∞–≥–æ–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏
üìö **–ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** - –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —Ä–µ—Å—É—Ä—Å–∞—Ö
‚ùì **FAQ** - –û—Ç–≤–µ—Ç—ã –Ω–∞ —Å–∞–º—ã–µ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
üë• **–ö–æ–Ω—Ç–∞–∫—Ç—ã** - –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –æ—Ç–¥–µ–ª–æ–≤
üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞** - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã
üí¨ **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å** - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ HR-–æ—Ç–¥–µ–ª—É
üìä **–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å** - –í–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏

üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/status - –ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–µ–º —Å—Ç–∞—Ç—É—Å–µ
/contacts - –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º
/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)

üí° –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞ –ø–æ—ç—Ç–∞–ø–Ω–æ
‚Ä¢ –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É
‚Ä¢ –í—Å–µ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

üìû –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞: {settings.SUPPORT_TELEGRAM}
üìß HR-–æ—Ç–¥–µ–ª: {settings.HR_EMAIL}
"""

    await update.message.reply_text(help_text)


async def status_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞"""
    user_id = update.effective_user.id
    db_user = db_manager.get_user(user_id)

    if not db_user:
        await update.message.reply_text(
            "‚ùì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."
        )
        return

    db_manager.log_user_action(user_id, "status_check", "–ü—Ä–æ–≤–µ—Ä–∏–ª —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É")

    progress_bar = Keyboards.get_progress_visualization(db_user.stage)

    status_text = f"""
üìä –í–∞—à —Å—Ç–∞—Ç—É—Å

{db_user.status_emoji} **–°—Ç–∞—Ç—É—Å:** {db_user.status_name}
üìà **–ü—Ä–æ–≥—Ä–µ—Å—Å:** {db_user.stage}/10 —ç—Ç–∞–ø–æ–≤
{progress_bar}

üéØ **–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:** {_get_next_step_hint(db_user)}

üìÖ **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {db_user.created_at.strftime('%d.%m.%Y') if db_user.created_at else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
üîÑ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {db_user.updated_at.strftime('%d.%m.%Y %H:%M') if db_user.updated_at else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}
"""

    await update.message.reply_text(status_text)


async def contacts_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º"""
    user_id = update.effective_user.id
    db_manager.log_user_action(user_id, "contacts_quick", "–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º")

    contacts_text = f"""
üìû –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã

üè¢ **HR-–æ—Ç–¥–µ–ª:**
üë§ –§–µ–¥–æ—Å–µ–µ–Ω–∫–æ –°. –ú.
üìß {settings.HR_EMAIL}
üì± {settings.HR_TELEGRAM}
üìû {settings.HR_PHONE}

üíª **IT-–ø–æ–¥–¥–µ—Ä–∂–∫–∞:**
üìß {settings.SUPPORT_EMAIL}
üì± {settings.SUPPORT_TELEGRAM}
üìû {settings.SUPPORT_PHONE}

üî• **–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É—á–∞–∏:**
üì± {settings.SUPPORT_TELEGRAM}

‚è∞ **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:**
–ü–Ω-–ü—Ç: 9:00 - 18:00
–í—ã—Ö–æ–¥–Ω—ã–µ: –ø–æ —Å—Ä–æ—á–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º

–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–∑–¥–µ–ª "üë• –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"
"""

    await update.message.reply_text(contacts_text)


async def handle_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    text = update.message.text
    user_id = update.effective_user.id

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥—Ä—É–≥–∏—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    from handlers.preboarding import handle_preboarding
    from handlers.onboarding import handle_onboarding
    from handlers.info import handle_useful_info
    from handlers.faq import handle_faq
    from handlers.contacts import handle_contacts, handle_support
    from handlers.feedback import handle_feedback, handle_progress

    # –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–∞–º –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    if text == "üöÄ –ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥":
        await handle_preboarding(update, context)
    elif text == "üìã –û–Ω–±–æ—Ä–¥–∏–Ω–≥":
        await handle_onboarding(update, context)
    elif text == "üìö –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è":
        await handle_useful_info(update, context)
    elif text == "‚ùì FAQ":
        await handle_faq(update, context)
    elif text == "üë• –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤":
        await handle_contacts(update, context)
    elif text == "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        await handle_support(update, context)
    elif text == "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å":
        await handle_feedback(update, context)
    elif text == "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å":
        await handle_progress(update, context)
    elif text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await start_command(update, context)
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
        db_manager.log_user_action(user_id, "unknown_command", f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}")
        await update.message.reply_text(
            "‚ùì –ù–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–ª–∏ /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
        )


def _get_next_step_hint(user: User) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –æ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ"""
    hints = {
        0: "–ù–∞—á–Ω–∏—Ç–µ —Å —Ä–∞–∑–¥–µ–ª–∞ 'üöÄ –ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥'",
        1: "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —Ç—Ä–µ–±—É–µ–º—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏",
        2: "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã",
        3: "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –¢–ö –†–§",
        4: "–î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        5: "–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –∫ —Ä–∞–∑–¥–µ–ª—É 'üìã –û–Ω–±–æ—Ä–¥–∏–Ω–≥'",
        6: "–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç–µ",
        7: "–ò–∑—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–∞–Ω–¥–µ",
        8: "–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–ª–∞–Ω–µ—Ä–∫–∞–º–∏",
        9: "–ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥",
        10: "–í—Å–µ —ç—Ç–∞–ø—ã –ø—Ä–æ–π–¥–µ–Ω—ã! üéâ"
    }

    return hints.get(user.stage, "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∞–¥–∞–ø—Ç–∞—Ü–∏–∏")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
def is_user_registered(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    user = db_manager.get_user(user_id)
    return user is not None


# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
def require_registration(func):
    """–î–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    async def wrapper(update: Update, context: ContextTypes.DEFAULT_TYPE):
        user_id = update.effective_user.id

        if not is_user_registered(user_id):
            await update.message.reply_text(
                "‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start"
            )
            return

        return await func(update, context)

    return wrapper