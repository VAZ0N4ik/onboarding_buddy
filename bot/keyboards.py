# bot/keyboards.py
"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –º–µ–Ω—é –¥–ª—è OnboardingBuddy
"""
from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from typing import List


class Keyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ –±–æ—Ç–∞"""

    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ–Ω—é
    MAIN_MENU = [
        ["üöÄ –ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥", "üìã –û–Ω–±–æ—Ä–¥–∏–Ω–≥"],
        ["üìö –ü–æ–ª–µ–∑–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "‚ùì FAQ"],
        ["üë• –ö–æ–Ω—Ç–∞–∫—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", "üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞"],
        ["üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å"]
    ]

    INFO_MENU = [
        ["üè¢ –û –∫–æ–º–ø–∞–Ω–∏–∏", "üìú –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –∫—É–ª—å—Ç—É—Ä–∞"],
        ["üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ —Ä–µ—Å—É—Ä—Å—ã", "üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ]

    FAQ_MENU = [
        ["üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞ –∏ –ª—å–≥–æ—Ç—ã", "üïê –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è"],
        ["üèñÔ∏è –û—Ç–ø—É—Å–∫–∞ –∏ –±–æ–ª—å–Ω–∏—á–Ω—ã–µ", "üéì –û–±—É—á–µ–Ω–∏–µ"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ]

    @staticmethod
    def get_main_menu() -> ReplyKeyboardMarkup:
        """–ü–æ–ª—É—á–∏—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        return ReplyKeyboardMarkup(
            Keyboards.MAIN_MENU,
            resize_keyboard=True,
            one_time_keyboard=False
        )

    @staticmethod
    def get_info_menu() -> ReplyKeyboardMarkup:
        """–ü–æ–ª—É—á–∏—Ç—å –º–µ–Ω—é –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""
        return ReplyKeyboardMarkup(
            Keyboards.INFO_MENU,
            resize_keyboard=True,
            one_time_keyboard=False
        )

    @staticmethod
    def get_faq_menu() -> ReplyKeyboardMarkup:
        """–ü–æ–ª—É—á–∏—Ç—å FAQ –º–µ–Ω—é"""
        return ReplyKeyboardMarkup(
            Keyboards.FAQ_MENU,
            resize_keyboard=True,
            one_time_keyboard=False
        )

    @staticmethod
    def get_preboarding_start() -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –ø—Ä–µ–±–æ—Ä–¥–∏–Ω–≥–∞"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å!", callback_data="start_preboarding")]
        ])

    @staticmethod
    def get_document_categories() -> InlineKeyboardMarkup:
        """–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üìÑ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã (1-5)", callback_data="docs_main")],
            [InlineKeyboardButton("üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –¢–ö –†–§ (6-9)", callback_data="docs_tk")]
        ])

    @staticmethod
    def get_docs_main_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã", callback_data="docs_main_sent")],
            [InlineKeyboardButton("üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –¢–ö –†–§", callback_data="docs_tk")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="start_preboarding")]
        ])

    @staticmethod
    def get_docs_tk_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –¢–ö –†–§"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã", callback_data="docs_tk_sent")],
            [InlineKeyboardButton("üìÑ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="docs_main")],
            [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="start_preboarding")]
        ])

    @staticmethod
    def get_docs_completion_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üìÑ –û—Å–Ω–æ–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="docs_main")],
            [InlineKeyboardButton("üìë –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –¢–ö –†–§", callback_data="docs_tk")],
            [InlineKeyboardButton("‚úÖ –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã", callback_data="all_docs_sent")]
        ])

    @staticmethod
    def get_start_onboarding() -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üöÄ –ù–∞—á–∞—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥", callback_data="start_onboarding")]
        ])

    @staticmethod
    def get_documents_received() -> InlineKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üìÑ –ü–æ–ª—É—á–∏–ª –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="start_onboarding")]
        ])

    @staticmethod
    def get_email_access() -> InlineKeyboardMarkup:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—á—Ç–µ"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –ü–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø", callback_data="email_received")],
            [InlineKeyboardButton("‚ùå –ù–µ –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø", callback_data="email_not_received")]
        ])

    @staticmethod
    def get_email_retry() -> InlineKeyboardMarkup:
        """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–æ—á—Ç–µ"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –ü–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø", callback_data="email_received")],
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—â–µ —Ä–∞–∑", callback_data="start_onboarding")]
        ])

    @staticmethod
    def get_onboarding_next() -> InlineKeyboardMarkup:
        """–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üë• –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –∫–æ–º–∞–Ω–¥–æ–π", callback_data="team_intro")],
            [InlineKeyboardButton("üìÖ –ü–ª–∞–Ω–µ—Ä–∫–∏ –æ—Ç–¥–µ–ª–æ–≤", callback_data="meetings")]
        ])

    @staticmethod
    def get_team_intro_next() -> InlineKeyboardMarkup:
        """–ü–æ—Å–ª–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üìÖ –ü–ª–∞–Ω–µ—Ä–∫–∏ –æ—Ç–¥–µ–ª–æ–≤", callback_data="meetings")],
            [InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥", callback_data="complete_onboarding")]
        ])

    @staticmethod
    def get_meetings_next() -> InlineKeyboardMarkup:
        """–ü–æ—Å–ª–µ –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –ø–ª–∞–Ω–µ—Ä–∫–∞–º–∏"""
        return InlineKeyboardMarkup([
            [InlineKeyboardButton("üë• –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –∫–æ–º–∞–Ω–¥–æ–π", callback_data="team_intro")],
            [InlineKeyboardButton("‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥", callback_data="complete_onboarding")]
        ])

    @staticmethod
    def get_admin_panel() -> InlineKeyboardMarkup:
        """–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å"""
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö", callback_data="admin_export"),
                InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")
            ],
            [
                InlineKeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É", callback_data="admin_refresh"),
                InlineKeyboardButton("üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö", callback_data="admin_cleanup")
            ],
            [
                InlineKeyboardButton("üìà –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞", callback_data="admin_analytics")
            ]
        ])

    @staticmethod
    def get_user_status_filter() -> InlineKeyboardMarkup:
        """–§–∏–ª—å—Ç—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Å—Ç–∞—Ç—É—Å—É"""
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton("üÜï –ù–æ–≤—ã–µ", callback_data="filter_new"),
                InlineKeyboardButton("üîÑ –ü—Ä–µ–±–æ—Ä–¥–∏–Ω–≥", callback_data="filter_preboarding")
            ],
            [
                InlineKeyboardButton("‚úÖ –ì–æ—Ç–æ–≤—ã –∫ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥—É", callback_data="filter_preboarded"),
                InlineKeyboardButton("üöÄ –û–Ω–±–æ—Ä–¥–∏–Ω–≥", callback_data="filter_onboarding")
            ],
            [
                InlineKeyboardButton("üéâ –ó–∞–≤–µ—Ä—à–∏–ª–∏", callback_data="filter_completed"),
                InlineKeyboardButton("üìä –í—Å–µ", callback_data="filter_all")
            ]
        ])

    @staticmethod
    def get_confirmation(action: str, confirm_data: str, cancel_data: str = "cancel") -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
        return InlineKeyboardMarkup([
            [
                InlineKeyboardButton(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å {action}", callback_data=confirm_data),
                InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=cancel_data)
            ]
        ])

    @staticmethod
    def get_pagination(page: int, total_pages: int, prefix: str) -> InlineKeyboardMarkup:
        """–ü–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è —Å–ø–∏—Å–∫–æ–≤"""
        buttons = []

        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = []
        if page > 1:
            nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"{prefix}_page_{page - 1}"))

        nav_buttons.append(InlineKeyboardButton(f"{page}/{total_pages}", callback_data="noop"))

        if page < total_pages:
            nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f"{prefix}_page_{page + 1}"))

        if nav_buttons:
            buttons.append(nav_buttons)

        # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
        buttons.append([InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")])

        return InlineKeyboardMarkup(buttons)

    @staticmethod
    def get_progress_visualization(stage: int, max_stage: int = 10) -> str:
        """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
        progress = min(stage / max_stage, 1.0)
        filled = int(progress * 10)
        empty = 10 - filled

        return f"{'‚ñà' * filled}{'‚ñë' * empty} {progress * 100:.0f}%"

    @staticmethod
    def create_url_keyboard(buttons: List[tuple]) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å URL –∫–Ω–æ–ø–∫–∞–º–∏

        Args:
            buttons: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (text, url)
        """
        keyboard = []
        for text, url in buttons:
            keyboard.append([InlineKeyboardButton(text, url=url)])

        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def create_callback_keyboard(buttons: List[tuple], columns: int = 2) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å callback –∫–Ω–æ–ø–∫–∞–º–∏

        Args:
            buttons: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (text, callback_data)
            columns: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ –≤ —Ä—è–¥—É
        """
        keyboard = []
        row = []

        for i, (text, callback_data) in enumerate(buttons):
            row.append(InlineKeyboardButton(text, callback_data=callback_data))

            if len(row) == columns or i == len(buttons) - 1:
                keyboard.append(row)
                row = []

        return InlineKeyboardMarkup(keyboard)